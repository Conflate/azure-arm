{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerName": {
      "defaultValue": "my-container",
      "type": "string",
      "metadata": {
        "description": "Name of the container resource in Azure"
      }
    },
    "port": {
      "defaultValue": "80",
      "type": "string",
      "metadata": {
        "description": "Port the container exposes and is listening on"
      }
    },
    "image": {
      "defaultValue": "microsoft/aci-helloworld",
      "type": "string",
      "metadata": {
        "description": "Reference to Docker repo, image & tag in standard notation"
      }
    },
    "previewLocation": {
      "defaultValue": "westeurope",
      "type": "string",
      "allowedValues": [
        "westeurope",
        "westus",
        "eastus"
      ],
      "metadata": {
        "description": "During preview only available in these regions: westeurope westus & eastus"
      }
    }
  },
  "variables": {
    "memory": 1.0,
    "cpu": 1.0
  },
  "resources": [
    {
      "name": "[parameters('containerName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2017-08-01-preview",
      "location": "[parameters('previewLocation')]",
      "properties": {
        "containers": [
          {
            "name": "[parameters('containerName')]",
            "properties": {
              "image": "[parameters('image')]",
              "ports": [
                {
                  "port": "[parameters('port')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "[variables('cpu')]",
                  "memoryInGb": "[variables('memory')]"
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": "[parameters('port')]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "newContainerURL": {
      "value": "[concat('http://', reference(parameters('containerName')).ipAddress.ip, ':', reference(parameters('containerName')).ipAddress.ports[0].port)]",
      "type": "string"
    },
    "newContainerState": {
      "value": "[reference(parameters('containerName')).state]",
      "type": "string"
    }
  }
}